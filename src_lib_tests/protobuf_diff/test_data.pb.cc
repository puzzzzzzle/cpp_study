// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_data.proto

#include "test_data.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_test_5fdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_test_5fdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_test_5fdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Values_test_5fdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_test_5fdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WithList_test_5fdata_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_test_5fdata_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WithList_M3Entry_DoNotUse_test_5fdata_2eproto;
namespace test_data {
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
class ValuesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Values> _instance;
} _Values_default_instance_;
class MessageInMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageInMessage> _instance;
} _MessageInMessage_default_instance_;
class WithList_M3Entry_DoNotUseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WithList_M3Entry_DoNotUse> _instance;
} _WithList_M3Entry_DoNotUse_default_instance_;
class WithListDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WithList> _instance;
} _WithList_default_instance_;
class OneOfMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OneOfMessage> _instance;
  const ::test_data::Values* v2_;
  const ::test_data::WithList* v3_;
} _OneOfMessage_default_instance_;
}  // namespace test_data
static void InitDefaultsscc_info_Empty_test_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::test_data::_Empty_default_instance_;
    new (ptr) ::test_data::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::test_data::Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_test_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_test_5fdata_2eproto}, {}};

static void InitDefaultsscc_info_MessageInMessage_test_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::test_data::_MessageInMessage_default_instance_;
    new (ptr) ::test_data::MessageInMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::test_data::MessageInMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MessageInMessage_test_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MessageInMessage_test_5fdata_2eproto}, {
      &scc_info_Values_test_5fdata_2eproto.base,
      &scc_info_Empty_test_5fdata_2eproto.base,}};

static void InitDefaultsscc_info_OneOfMessage_test_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::test_data::_OneOfMessage_default_instance_;
    new (ptr) ::test_data::OneOfMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::test_data::OneOfMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_OneOfMessage_test_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_OneOfMessage_test_5fdata_2eproto}, {
      &scc_info_Values_test_5fdata_2eproto.base,
      &scc_info_WithList_test_5fdata_2eproto.base,}};

static void InitDefaultsscc_info_Values_test_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::test_data::_Values_default_instance_;
    new (ptr) ::test_data::Values();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::test_data::Values::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Values_test_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Values_test_5fdata_2eproto}, {}};

static void InitDefaultsscc_info_WithList_test_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::test_data::_WithList_default_instance_;
    new (ptr) ::test_data::WithList();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::test_data::WithList::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WithList_test_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_WithList_test_5fdata_2eproto}, {
      &scc_info_Values_test_5fdata_2eproto.base,
      &scc_info_WithList_M3Entry_DoNotUse_test_5fdata_2eproto.base,}};

static void InitDefaultsscc_info_WithList_M3Entry_DoNotUse_test_5fdata_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::test_data::_WithList_M3Entry_DoNotUse_default_instance_;
    new (ptr) ::test_data::WithList_M3Entry_DoNotUse();
  }
  ::test_data::WithList_M3Entry_DoNotUse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WithList_M3Entry_DoNotUse_test_5fdata_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_WithList_M3Entry_DoNotUse_test_5fdata_2eproto}, {
      &scc_info_Values_test_5fdata_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_test_5fdata_2eproto[6];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_test_5fdata_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_test_5fdata_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_test_5fdata_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test_data::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test_data::Values, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::test_data::Values, i1_),
  PROTOBUF_FIELD_OFFSET(::test_data::Values, i2_),
  PROTOBUF_FIELD_OFFSET(::test_data::Values, f3_),
  PROTOBUF_FIELD_OFFSET(::test_data::Values, str4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test_data::MessageInMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::test_data::MessageInMessage, v1_),
  PROTOBUF_FIELD_OFFSET(::test_data::MessageInMessage, v2_),
  PROTOBUF_FIELD_OFFSET(::test_data::MessageInMessage, v3_),
  PROTOBUF_FIELD_OFFSET(::test_data::WithList_M3Entry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::test_data::WithList_M3Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::test_data::WithList_M3Entry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::test_data::WithList_M3Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test_data::WithList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::test_data::WithList, v1_),
  PROTOBUF_FIELD_OFFSET(::test_data::WithList, l2_),
  PROTOBUF_FIELD_OFFSET(::test_data::WithList, m3_),
  PROTOBUF_FIELD_OFFSET(::test_data::WithList, str4_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test_data::OneOfMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::test_data::OneOfMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::test_data::OneOfMessage, v1_),
  offsetof(::test_data::OneOfMessageDefaultTypeInternal, v2_),
  offsetof(::test_data::OneOfMessageDefaultTypeInternal, v3_),
  PROTOBUF_FIELD_OFFSET(::test_data::OneOfMessage, payload_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::test_data::Empty)},
  { 5, -1, sizeof(::test_data::Values)},
  { 14, -1, sizeof(::test_data::MessageInMessage)},
  { 22, 29, sizeof(::test_data::WithList_M3Entry_DoNotUse)},
  { 31, -1, sizeof(::test_data::WithList)},
  { 40, -1, sizeof(::test_data::OneOfMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::test_data::_Empty_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::test_data::_Values_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::test_data::_MessageInMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::test_data::_WithList_M3Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::test_data::_WithList_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::test_data::_OneOfMessage_default_instance_),
};

const char descriptor_table_protodef_test_5fdata_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017test_data.proto\022\ttest_data\"\007\n\005Empty\":\n"
  "\006Values\022\n\n\002i1\030\001 \001(\005\022\n\n\002i2\030\002 \001(\004\022\n\n\002f3\030\003 "
  "\001(\001\022\014\n\004str4\030\004 \001(\t\"n\n\020MessageInMessage\022\035\n"
  "\002v1\030\001 \001(\0132\021.test_data.Values\022\034\n\002v2\030\002 \001(\013"
  "2\020.test_data.Empty\022\035\n\002v3\030\003 \001(\0132\021.test_da"
  "ta.Values\"\275\001\n\010WithList\022\035\n\002v1\030\001 \001(\0132\021.tes"
  "t_data.Values\022\035\n\002l2\030\002 \003(\0132\021.test_data.Va"
  "lues\022\'\n\002m3\030\003 \003(\0132\033.test_data.WithList.M3"
  "Entry\022\014\n\004str4\030\004 \001(\t\032<\n\007M3Entry\022\013\n\003key\030\001 "
  "\001(\005\022 \n\005value\030\002 \001(\0132\021.test_data.Values:\0028"
  "\001\"|\n\014OneOfMessage\022\035\n\002v1\030\001 \001(\0132\021.test_dat"
  "a.Values\022\037\n\002v2\030\002 \001(\0132\021.test_data.ValuesH"
  "\000\022!\n\002v3\030\003 \001(\0132\023.test_data.WithListH\000B\t\n\007"
  "payloadb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_test_5fdata_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_test_5fdata_2eproto_sccs[6] = {
  &scc_info_Empty_test_5fdata_2eproto.base,
  &scc_info_MessageInMessage_test_5fdata_2eproto.base,
  &scc_info_OneOfMessage_test_5fdata_2eproto.base,
  &scc_info_Values_test_5fdata_2eproto.base,
  &scc_info_WithList_test_5fdata_2eproto.base,
  &scc_info_WithList_M3Entry_DoNotUse_test_5fdata_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_test_5fdata_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_test_5fdata_2eproto = {
  false, false, descriptor_table_protodef_test_5fdata_2eproto, "test_data.proto", 535,
  &descriptor_table_test_5fdata_2eproto_once, descriptor_table_test_5fdata_2eproto_sccs, descriptor_table_test_5fdata_2eproto_deps, 6, 0,
  schemas, file_default_instances, TableStruct_test_5fdata_2eproto::offsets,
  file_level_metadata_test_5fdata_2eproto, 6, file_level_enum_descriptors_test_5fdata_2eproto, file_level_service_descriptors_test_5fdata_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_test_5fdata_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_test_5fdata_2eproto)), true);
namespace test_data {

// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:test_data.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:test_data.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:test_data.Empty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Empty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Empty::ArenaDtor(void* object) {
  Empty* _this = reinterpret_cast< Empty* >(object);
  (void)_this;
}
void Empty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_test_5fdata_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:test_data.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test_data.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test_data.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test_data.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test_data.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test_data.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test_data.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test_data.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test_data.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test_data.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Values::InitAsDefaultInstance() {
}
class Values::_Internal {
 public:
};

Values::Values(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:test_data.Values)
}
Values::Values(const Values& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  str4_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_str4().empty()) {
    str4_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_str4(),
      GetArena());
  }
  ::memcpy(&i2_, &from.i2_,
    static_cast<size_t>(reinterpret_cast<char*>(&i1_) -
    reinterpret_cast<char*>(&i2_)) + sizeof(i1_));
  // @@protoc_insertion_point(copy_constructor:test_data.Values)
}

void Values::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Values_test_5fdata_2eproto.base);
  str4_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&i2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i1_) -
      reinterpret_cast<char*>(&i2_)) + sizeof(i1_));
}

Values::~Values() {
  // @@protoc_insertion_point(destructor:test_data.Values)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Values::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  str4_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Values::ArenaDtor(void* object) {
  Values* _this = reinterpret_cast< Values* >(object);
  (void)_this;
}
void Values::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Values::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Values& Values::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Values_test_5fdata_2eproto.base);
  return *internal_default_instance();
}


void Values::Clear() {
// @@protoc_insertion_point(message_clear_start:test_data.Values)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  str4_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&i2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&i1_) -
      reinterpret_cast<char*>(&i2_)) + sizeof(i1_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Values::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 i1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          i1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 i2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          i2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double f3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          f3_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string str4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_str4();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "test_data.Values.str4"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Values::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test_data.Values)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 i1 = 1;
  if (this->i1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_i1(), target);
  }

  // uint64 i2 = 2;
  if (this->i2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_i2(), target);
  }

  // double f3 = 3;
  if (!(this->f3() <= 0 && this->f3() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_f3(), target);
  }

  // string str4 = 4;
  if (this->str4().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_str4().data(), static_cast<int>(this->_internal_str4().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "test_data.Values.str4");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_str4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test_data.Values)
  return target;
}

size_t Values::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test_data.Values)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string str4 = 4;
  if (this->str4().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_str4());
  }

  // uint64 i2 = 2;
  if (this->i2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_i2());
  }

  // double f3 = 3;
  if (!(this->f3() <= 0 && this->f3() >= 0)) {
    total_size += 1 + 8;
  }

  // int32 i1 = 1;
  if (this->i1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_i1());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Values::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test_data.Values)
  GOOGLE_DCHECK_NE(&from, this);
  const Values* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Values>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test_data.Values)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test_data.Values)
    MergeFrom(*source);
  }
}

void Values::MergeFrom(const Values& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test_data.Values)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.str4().size() > 0) {
    _internal_set_str4(from._internal_str4());
  }
  if (from.i2() != 0) {
    _internal_set_i2(from._internal_i2());
  }
  if (!(from.f3() <= 0 && from.f3() >= 0)) {
    _internal_set_f3(from._internal_f3());
  }
  if (from.i1() != 0) {
    _internal_set_i1(from._internal_i1());
  }
}

void Values::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test_data.Values)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Values::CopyFrom(const Values& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test_data.Values)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Values::IsInitialized() const {
  return true;
}

void Values::InternalSwap(Values* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  str4_.Swap(&other->str4_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Values, i1_)
      + sizeof(Values::i1_)
      - PROTOBUF_FIELD_OFFSET(Values, i2_)>(
          reinterpret_cast<char*>(&i2_),
          reinterpret_cast<char*>(&other->i2_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Values::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MessageInMessage::InitAsDefaultInstance() {
  ::test_data::_MessageInMessage_default_instance_._instance.get_mutable()->v1_ = const_cast< ::test_data::Values*>(
      ::test_data::Values::internal_default_instance());
  ::test_data::_MessageInMessage_default_instance_._instance.get_mutable()->v2_ = const_cast< ::test_data::Empty*>(
      ::test_data::Empty::internal_default_instance());
  ::test_data::_MessageInMessage_default_instance_._instance.get_mutable()->v3_ = const_cast< ::test_data::Values*>(
      ::test_data::Values::internal_default_instance());
}
class MessageInMessage::_Internal {
 public:
  static const ::test_data::Values& v1(const MessageInMessage* msg);
  static const ::test_data::Empty& v2(const MessageInMessage* msg);
  static const ::test_data::Values& v3(const MessageInMessage* msg);
};

const ::test_data::Values&
MessageInMessage::_Internal::v1(const MessageInMessage* msg) {
  return *msg->v1_;
}
const ::test_data::Empty&
MessageInMessage::_Internal::v2(const MessageInMessage* msg) {
  return *msg->v2_;
}
const ::test_data::Values&
MessageInMessage::_Internal::v3(const MessageInMessage* msg) {
  return *msg->v3_;
}
MessageInMessage::MessageInMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:test_data.MessageInMessage)
}
MessageInMessage::MessageInMessage(const MessageInMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_v1()) {
    v1_ = new ::test_data::Values(*from.v1_);
  } else {
    v1_ = nullptr;
  }
  if (from._internal_has_v2()) {
    v2_ = new ::test_data::Empty(*from.v2_);
  } else {
    v2_ = nullptr;
  }
  if (from._internal_has_v3()) {
    v3_ = new ::test_data::Values(*from.v3_);
  } else {
    v3_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:test_data.MessageInMessage)
}

void MessageInMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageInMessage_test_5fdata_2eproto.base);
  ::memset(&v1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&v3_) -
      reinterpret_cast<char*>(&v1_)) + sizeof(v3_));
}

MessageInMessage::~MessageInMessage() {
  // @@protoc_insertion_point(destructor:test_data.MessageInMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MessageInMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete v1_;
  if (this != internal_default_instance()) delete v2_;
  if (this != internal_default_instance()) delete v3_;
}

void MessageInMessage::ArenaDtor(void* object) {
  MessageInMessage* _this = reinterpret_cast< MessageInMessage* >(object);
  (void)_this;
}
void MessageInMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MessageInMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageInMessage& MessageInMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageInMessage_test_5fdata_2eproto.base);
  return *internal_default_instance();
}


void MessageInMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:test_data.MessageInMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && v1_ != nullptr) {
    delete v1_;
  }
  v1_ = nullptr;
  if (GetArena() == nullptr && v2_ != nullptr) {
    delete v2_;
  }
  v2_ = nullptr;
  if (GetArena() == nullptr && v3_ != nullptr) {
    delete v3_;
  }
  v3_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MessageInMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .test_data.Values v1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_v1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .test_data.Empty v2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_v2(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .test_data.Values v3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_v3(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageInMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test_data.MessageInMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .test_data.Values v1 = 1;
  if (this->has_v1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::v1(this), target, stream);
  }

  // .test_data.Empty v2 = 2;
  if (this->has_v2()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::v2(this), target, stream);
  }

  // .test_data.Values v3 = 3;
  if (this->has_v3()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::v3(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test_data.MessageInMessage)
  return target;
}

size_t MessageInMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test_data.MessageInMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .test_data.Values v1 = 1;
  if (this->has_v1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *v1_);
  }

  // .test_data.Empty v2 = 2;
  if (this->has_v2()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *v2_);
  }

  // .test_data.Values v3 = 3;
  if (this->has_v3()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *v3_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageInMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test_data.MessageInMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageInMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageInMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test_data.MessageInMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test_data.MessageInMessage)
    MergeFrom(*source);
  }
}

void MessageInMessage::MergeFrom(const MessageInMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test_data.MessageInMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_v1()) {
    _internal_mutable_v1()->::test_data::Values::MergeFrom(from._internal_v1());
  }
  if (from.has_v2()) {
    _internal_mutable_v2()->::test_data::Empty::MergeFrom(from._internal_v2());
  }
  if (from.has_v3()) {
    _internal_mutable_v3()->::test_data::Values::MergeFrom(from._internal_v3());
  }
}

void MessageInMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test_data.MessageInMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageInMessage::CopyFrom(const MessageInMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test_data.MessageInMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageInMessage::IsInitialized() const {
  return true;
}

void MessageInMessage::InternalSwap(MessageInMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MessageInMessage, v3_)
      + sizeof(MessageInMessage::v3_)
      - PROTOBUF_FIELD_OFFSET(MessageInMessage, v1_)>(
          reinterpret_cast<char*>(&v1_),
          reinterpret_cast<char*>(&other->v1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageInMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

WithList_M3Entry_DoNotUse::WithList_M3Entry_DoNotUse() {}
WithList_M3Entry_DoNotUse::WithList_M3Entry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void WithList_M3Entry_DoNotUse::MergeFrom(const WithList_M3Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata WithList_M3Entry_DoNotUse::GetMetadata() const {
  return GetMetadataStatic();
}
void WithList_M3Entry_DoNotUse::MergeFrom(
    const ::PROTOBUF_NAMESPACE_ID::Message& other) {
  ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom(other);
}


// ===================================================================

void WithList::InitAsDefaultInstance() {
  ::test_data::_WithList_default_instance_._instance.get_mutable()->v1_ = const_cast< ::test_data::Values*>(
      ::test_data::Values::internal_default_instance());
}
class WithList::_Internal {
 public:
  static const ::test_data::Values& v1(const WithList* msg);
};

const ::test_data::Values&
WithList::_Internal::v1(const WithList* msg) {
  return *msg->v1_;
}
WithList::WithList(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  l2_(arena),
  m3_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:test_data.WithList)
}
WithList::WithList(const WithList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      l2_(from.l2_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  m3_.MergeFrom(from.m3_);
  str4_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_str4().empty()) {
    str4_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_str4(),
      GetArena());
  }
  if (from._internal_has_v1()) {
    v1_ = new ::test_data::Values(*from.v1_);
  } else {
    v1_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:test_data.WithList)
}

void WithList::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WithList_test_5fdata_2eproto.base);
  str4_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  v1_ = nullptr;
}

WithList::~WithList() {
  // @@protoc_insertion_point(destructor:test_data.WithList)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WithList::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  str4_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete v1_;
}

void WithList::ArenaDtor(void* object) {
  WithList* _this = reinterpret_cast< WithList* >(object);
  (void)_this;
}
void WithList::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WithList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WithList& WithList::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WithList_test_5fdata_2eproto.base);
  return *internal_default_instance();
}


void WithList::Clear() {
// @@protoc_insertion_point(message_clear_start:test_data.WithList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  l2_.Clear();
  m3_.Clear();
  str4_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && v1_ != nullptr) {
    delete v1_;
  }
  v1_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WithList::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .test_data.Values v1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_v1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .test_data.Values l2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_l2(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // map<int32, .test_data.Values> m3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&m3_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string str4 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_str4();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "test_data.WithList.str4"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WithList::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test_data.WithList)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .test_data.Values v1 = 1;
  if (this->has_v1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::v1(this), target, stream);
  }

  // repeated .test_data.Values l2 = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_l2_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_l2(i), target, stream);
  }

  // map<int32, .test_data.Values> m3 = 3;
  if (!this->_internal_m3().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::test_data::Values >::const_pointer
        ConstPtr;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::SortItem< ::PROTOBUF_NAMESPACE_ID::int32, ConstPtr > SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByFirstField<SortItem> Less;

    if (stream->IsSerializationDeterministic() &&
        this->_internal_m3().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_m3().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::test_data::Values >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::test_data::Values >::const_iterator
          it = this->_internal_m3().begin();
          it != this->_internal_m3().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = WithList_M3Entry_DoNotUse::Funcs::InternalSerialize(3, items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second, target, stream);
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::test_data::Values >::const_iterator
          it = this->_internal_m3().begin();
          it != this->_internal_m3().end(); ++it) {
        target = WithList_M3Entry_DoNotUse::Funcs::InternalSerialize(3, it->first, it->second, target, stream);
      }
    }
  }

  // string str4 = 4;
  if (this->str4().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_str4().data(), static_cast<int>(this->_internal_str4().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "test_data.WithList.str4");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_str4(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test_data.WithList)
  return target;
}

size_t WithList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test_data.WithList)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .test_data.Values l2 = 2;
  total_size += 1UL * this->_internal_l2_size();
  for (const auto& msg : this->l2_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // map<int32, .test_data.Values> m3 = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_m3_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< ::PROTOBUF_NAMESPACE_ID::int32, ::test_data::Values >::const_iterator
      it = this->_internal_m3().begin();
      it != this->_internal_m3().end(); ++it) {
    total_size += WithList_M3Entry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // string str4 = 4;
  if (this->str4().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_str4());
  }

  // .test_data.Values v1 = 1;
  if (this->has_v1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *v1_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WithList::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test_data.WithList)
  GOOGLE_DCHECK_NE(&from, this);
  const WithList* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WithList>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test_data.WithList)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test_data.WithList)
    MergeFrom(*source);
  }
}

void WithList::MergeFrom(const WithList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test_data.WithList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  l2_.MergeFrom(from.l2_);
  m3_.MergeFrom(from.m3_);
  if (from.str4().size() > 0) {
    _internal_set_str4(from._internal_str4());
  }
  if (from.has_v1()) {
    _internal_mutable_v1()->::test_data::Values::MergeFrom(from._internal_v1());
  }
}

void WithList::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test_data.WithList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WithList::CopyFrom(const WithList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test_data.WithList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WithList::IsInitialized() const {
  return true;
}

void WithList::InternalSwap(WithList* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  l2_.InternalSwap(&other->l2_);
  m3_.Swap(&other->m3_);
  str4_.Swap(&other->str4_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(v1_, other->v1_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WithList::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OneOfMessage::InitAsDefaultInstance() {
  ::test_data::_OneOfMessage_default_instance_._instance.get_mutable()->v1_ = const_cast< ::test_data::Values*>(
      ::test_data::Values::internal_default_instance());
  ::test_data::_OneOfMessage_default_instance_.v2_ = const_cast< ::test_data::Values*>(
      ::test_data::Values::internal_default_instance());
  ::test_data::_OneOfMessage_default_instance_.v3_ = const_cast< ::test_data::WithList*>(
      ::test_data::WithList::internal_default_instance());
}
class OneOfMessage::_Internal {
 public:
  static const ::test_data::Values& v1(const OneOfMessage* msg);
  static const ::test_data::Values& v2(const OneOfMessage* msg);
  static const ::test_data::WithList& v3(const OneOfMessage* msg);
};

const ::test_data::Values&
OneOfMessage::_Internal::v1(const OneOfMessage* msg) {
  return *msg->v1_;
}
const ::test_data::Values&
OneOfMessage::_Internal::v2(const OneOfMessage* msg) {
  return *msg->payload_.v2_;
}
const ::test_data::WithList&
OneOfMessage::_Internal::v3(const OneOfMessage* msg) {
  return *msg->payload_.v3_;
}
void OneOfMessage::set_allocated_v2(::test_data::Values* v2) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (v2) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(v2);
    if (message_arena != submessage_arena) {
      v2 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, v2, submessage_arena);
    }
    set_has_v2();
    payload_.v2_ = v2;
  }
  // @@protoc_insertion_point(field_set_allocated:test_data.OneOfMessage.v2)
}
void OneOfMessage::set_allocated_v3(::test_data::WithList* v3) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_payload();
  if (v3) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(v3);
    if (message_arena != submessage_arena) {
      v3 = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, v3, submessage_arena);
    }
    set_has_v3();
    payload_.v3_ = v3;
  }
  // @@protoc_insertion_point(field_set_allocated:test_data.OneOfMessage.v3)
}
OneOfMessage::OneOfMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:test_data.OneOfMessage)
}
OneOfMessage::OneOfMessage(const OneOfMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_v1()) {
    v1_ = new ::test_data::Values(*from.v1_);
  } else {
    v1_ = nullptr;
  }
  clear_has_payload();
  switch (from.payload_case()) {
    case kV2: {
      _internal_mutable_v2()->::test_data::Values::MergeFrom(from._internal_v2());
      break;
    }
    case kV3: {
      _internal_mutable_v3()->::test_data::WithList::MergeFrom(from._internal_v3());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:test_data.OneOfMessage)
}

void OneOfMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OneOfMessage_test_5fdata_2eproto.base);
  v1_ = nullptr;
  clear_has_payload();
}

OneOfMessage::~OneOfMessage() {
  // @@protoc_insertion_point(destructor:test_data.OneOfMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void OneOfMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete v1_;
  if (has_payload()) {
    clear_payload();
  }
}

void OneOfMessage::ArenaDtor(void* object) {
  OneOfMessage* _this = reinterpret_cast< OneOfMessage* >(object);
  (void)_this;
}
void OneOfMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void OneOfMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OneOfMessage& OneOfMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OneOfMessage_test_5fdata_2eproto.base);
  return *internal_default_instance();
}


void OneOfMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:test_data.OneOfMessage)
  switch (payload_case()) {
    case kV2: {
      if (GetArena() == nullptr) {
        delete payload_.v2_;
      }
      break;
    }
    case kV3: {
      if (GetArena() == nullptr) {
        delete payload_.v3_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void OneOfMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:test_data.OneOfMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && v1_ != nullptr) {
    delete v1_;
  }
  v1_ = nullptr;
  clear_payload();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneOfMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .test_data.Values v1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_v1(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .test_data.Values v2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_v2(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .test_data.WithList v3 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_v3(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OneOfMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test_data.OneOfMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .test_data.Values v1 = 1;
  if (this->has_v1()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::v1(this), target, stream);
  }

  // .test_data.Values v2 = 2;
  if (_internal_has_v2()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::v2(this), target, stream);
  }

  // .test_data.WithList v3 = 3;
  if (_internal_has_v3()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::v3(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test_data.OneOfMessage)
  return target;
}

size_t OneOfMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test_data.OneOfMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .test_data.Values v1 = 1;
  if (this->has_v1()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *v1_);
  }

  switch (payload_case()) {
    // .test_data.Values v2 = 2;
    case kV2: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.v2_);
      break;
    }
    // .test_data.WithList v3 = 3;
    case kV3: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *payload_.v3_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OneOfMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:test_data.OneOfMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const OneOfMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OneOfMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:test_data.OneOfMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:test_data.OneOfMessage)
    MergeFrom(*source);
  }
}

void OneOfMessage::MergeFrom(const OneOfMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test_data.OneOfMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_v1()) {
    _internal_mutable_v1()->::test_data::Values::MergeFrom(from._internal_v1());
  }
  switch (from.payload_case()) {
    case kV2: {
      _internal_mutable_v2()->::test_data::Values::MergeFrom(from._internal_v2());
      break;
    }
    case kV3: {
      _internal_mutable_v3()->::test_data::WithList::MergeFrom(from._internal_v3());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void OneOfMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:test_data.OneOfMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneOfMessage::CopyFrom(const OneOfMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test_data.OneOfMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneOfMessage::IsInitialized() const {
  return true;
}

void OneOfMessage::InternalSwap(OneOfMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(v1_, other->v1_);
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneOfMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace test_data
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::test_data::Empty* Arena::CreateMaybeMessage< ::test_data::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test_data::Empty >(arena);
}
template<> PROTOBUF_NOINLINE ::test_data::Values* Arena::CreateMaybeMessage< ::test_data::Values >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test_data::Values >(arena);
}
template<> PROTOBUF_NOINLINE ::test_data::MessageInMessage* Arena::CreateMaybeMessage< ::test_data::MessageInMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test_data::MessageInMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::test_data::WithList_M3Entry_DoNotUse* Arena::CreateMaybeMessage< ::test_data::WithList_M3Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test_data::WithList_M3Entry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::test_data::WithList* Arena::CreateMaybeMessage< ::test_data::WithList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test_data::WithList >(arena);
}
template<> PROTOBUF_NOINLINE ::test_data::OneOfMessage* Arena::CreateMaybeMessage< ::test_data::OneOfMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test_data::OneOfMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
